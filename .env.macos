# K3s Development Environment Configuration for macOS
# Native installation configuration

# K3s Configuration
export K3S_VERSION="v1.31.4+k3s1"
export K3S_TOKEN="dev-cluster-token-2025-macos"
export K3S_CLUSTER_NAME="dev-cluster-macos"
export K3S_KUBECONFIG_MODE="644"

# Kubernetes Configuration
export KUBECONFIG="$HOME/.kube/config"
export KUBECTL_APPLY_SERVER_SIDE="true"

# Network Configuration
export CLUSTER_CIDR="10.42.0.0/16"
export SERVICE_CIDR="10.43.0.0/16"
export CLUSTER_DNS="10.43.0.10"

# MetalLB Configuration
export METALLB_IP_RANGE="192.168.1.240-192.168.1.250"
export METALLB_NAMESPACE="metallb-system"

# Service Versions
export TRAEFIK_VERSION="latest"
export ARGOCD_VERSION="v2.12.6"
export PROMETHEUS_VERSION="latest"
export GRAFANA_VERSION="latest"
export RANCHER_VERSION="latest"
export OPENSEARCH_VERSION="latest"

# Service Credentials
export RANCHER_PASSWORD="admin123"
export GRAFANA_PASSWORD="admin123"
export OPENSEARCH_PASSWORD="admin123"
export ARGOCD_ADMIN_PASSWORD=""  # Will be generated

# Directories
export K3S_CONFIG_DIR="/usr/local/etc/rancher/k3s"
export K3S_DATA_DIR="/usr/local/var/lib/rancher/k3s"
export K3S_LOG_DIR="/var/log/k3s"

# Service Ports
export TRAEFIK_WEB_PORT="8080"
export TRAEFIK_WEBSECURE_PORT="8443"
export RANCHER_PORT="8443"
export ARGOCD_PORT="8080"
export GRAFANA_PORT="3000"
export PROMETHEUS_PORT="9090"
export OPENSEARCH_PORT="9200"
export OPENSEARCH_DASHBOARD_PORT="5601"

# Helm Configuration
export HELM_CACHE_HOME="$HOME/.cache/helm"
export HELM_CONFIG_HOME="$HOME/.config/helm"
export HELM_DATA_HOME="$HOME/.local/share/helm"

# Development Settings
export DEV_ENVIRONMENT="true"
export LOG_LEVEL="info"
export DEBUG_MODE="false"

# macOS Specific Settings
export HOMEBREW_NO_AUTO_UPDATE="1"
export HOMEBREW_NO_INSTALL_CLEANUP="1"

# Colors for output
export COLOR_RED='\033[0;31m'
export COLOR_GREEN='\033[0;32m'
export COLOR_YELLOW='\033[1;33m'
export COLOR_BLUE='\033[0;34m'
export COLOR_NC='\033[0m'

# Helper functions
k3s_status() {
    kubectl get nodes -o wide 2>/dev/null || echo "K3s not running or configured"
}

k3s_services() {
    kubectl get svc -A --field-selector=spec.type=LoadBalancer 2>/dev/null || echo "No LoadBalancer services found"
}

k3s_pods() {
    kubectl get pods -A --field-selector=status.phase!=Running 2>/dev/null | head -20
}

# Aliases
alias k="kubectl"
alias kgp="kubectl get pods"
alias kgs="kubectl get services"
alias kgn="kubectl get nodes"
alias kdp="kubectl describe pod"
alias kds="kubectl describe service"
alias kdn="kubectl describe node"
alias kaf="kubectl apply -f"
alias kdf="kubectl delete -f"

# Quick access to logs
alias k3s-logs="tail -f /var/log/k3s/k3s.log"
alias argocd-logs="kubectl logs -n argocd -l app.kubernetes.io/name=argocd-server --tail=50"
alias grafana-logs="kubectl logs -n monitoring -l app.kubernetes.io/name=grafana --tail=50"
alias prometheus-logs="kubectl logs -n monitoring -l app.kubernetes.io/name=prometheus --tail=50"
alias traefik-logs="kubectl logs -n traefik -l app.kubernetes.io/name=traefik --tail=50"

# Quick port forwarding
alias pf-argocd="kubectl port-forward svc/argocd-server -n argocd 8080:80"
alias pf-grafana="kubectl port-forward svc/prometheus-grafana -n monitoring 3000:80"
alias pf-prometheus="kubectl port-forward svc/prometheus-kube-prometheus-prometheus -n monitoring 9090:9090"
alias pf-rancher="kubectl port-forward svc/rancher -n cattle-system 8443:80"

echo "K3s Development Environment configuration loaded for macOS"
echo "Use 'k3s_status' to check cluster status"
echo "Use 'k3s_services' to see LoadBalancer services"
echo "Use 'k3s_pods' to see non-running pods"
