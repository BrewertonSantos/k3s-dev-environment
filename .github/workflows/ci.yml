name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Validate Kubernetes Manifests
      run: |
        kubectl apply --dry-run=client -f k8s-manifests/
    
    - name: Validate Shell Scripts
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        find . -name "*.sh" -exec shellcheck {} \;
    
    - name: Validate YAML files
      run: |
        sudo apt-get install -y yamllint
        find . -name "*.yml" -o -name "*.yaml" | xargs yamllint -d relaxed
    
    - name: Test Environment Setup
      run: |
        cp .env.example .env
        chmod +x scripts/setup-k3s.sh
        chmod +x scripts/k3s-helper.sh
        
        # Test script syntax
        bash -n scripts/setup-k3s.sh
        bash -n scripts/k3s-helper.sh

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check documentation
      run: |
        # Check if all referenced files exist
        find docs/ -name "*.md" -exec grep -l "\[.*\](" {} \; | while read file; do
          echo "Checking links in $file"
          # This would need a more sophisticated link checker in real scenario
        done
